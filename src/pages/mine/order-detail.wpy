<style lang="scss" rel="stylesheet/scss">
  @import '../../assets/scss/index.scss';
  .address-item {
    @include flex-x();
    padding: 0 30rpx;
    height: 180rpx;
    background-color: #fff;
    width: 100%;
    .left-part {
      @include flex-y-center();
      flex-shrink: 0;
      padding-right: 30rpx;
      image {
        width: 34rpx;
        height: 34rpx;
      }
    }
    .center-part {
      @include flex-y-center();
      @include flex();
      .first-line {
        @include flex-x-middle();
        .name {
          font-weight: bold;
          margin-right: 30rpx;
        }
        .mobile {
          margin-right: 30rpx;
        }
        .default {
          font-size: $xg-size-0;
          color: $xg-c-red;
          border: 1px solid $xg-c-red;
          border-radius: 4rpx;
          width: 70rpx;
          text-align: center;
          height: 30rpx;
          line-height: 30rpx;
        }
      }
      .address {
        margin-top: 20rpx;
        color: #666;
        font-size: $xg-size-3;
      }
    }
  }

  .goods-info {
    margin-top: 20rpx;
    padding-left: 30rpx;
    background-color: #fff;
    .content {
      padding-right: 30rpx;
      @include flex-x-middle();
      image {
        width: 146rpx;
        height: 146rpx;
        margin: 24rpx 0;
      }
      .goods-info {
        margin-left: 20rpx;
        padding-right: 20rpx;
        height: 100%;
        @include flex(1);
        @include flex-y-center();
        .name {
          @include ellipsis();
          margin-bottom: 10rpx;
          font-size: $xg-size-4;
        }
        .dim {
          @include ellipsis(2);
          font-size: $xg-size-2;
          color: #999;
        }
        .price {
          font-size: $xg-size-5;
          margin-top: 10rpx;
          color: $xg-c-red;
        }
      }
      .count {
        @include flex-y-middle();
        .num {
          font-size: $xg-size-4;
          color: #333;
        }
        .customer {
          margin-top: 20rpx;
          font-size: $xg-size-2;
          border-radius: 100rpx;
          border: 1px solid $xg-c-red;
          color: $xg-c-red;
          padding: 0 10rpx;
        }
      }
    }
  }

  .orderTrack {
    padding: 30rpx;
    background-color: $xg-c-white;
    margin-top: 20rpx;
    font-size: $xg-size-4;
  }

  .pay-way-area {
    padding: 30rpx;
    background-color: #fff;
    font-size: $xg-size-4;
    color: #333;
    view {
      @include flex-x-middle();
      &:nth-of-type(2) {
        margin: 10rpx 0;
      }
      text {
        color: #999;
        width: 150rpx;
      }
    }
  }

  .order-info-area {
    padding: 30rpx;
    background-color: #fff;
    margin-top: 20rpx;
    font-size: $xg-size-4;
    color: #333;
    border-bottom: 1px solid $xg-c-seg;
    view {
      @include flex-x-middle();
      text {
        color: #999;
        width: 150rpx;
      }
    }
    view:first-of-type {
      margin-bottom: 10rpx;
    }
  }

  .total-area {
    padding: 30rpx;
    background-color: #fff;
    margin-top: 20rpx;
    font-size: $xg-size-4;
    color: $xg-c-red;
    view {
      @include flex-x-middle();
      text {
        color: #999;
        width: 150rpx;
      }
    }
  }

  .pay-info {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 88rpx;
    background-color: #fff;
    padding-right: 30rpx;
    @include flex-x-middle();
    @include justify-content-end();
    border-top: 1px solid $xg-c-seg;
    view {
      @include flex-x-middle();
      button {
        width: 192rpx;
        height: 64rpx;
        border-radius: 4rpx;
        border: 1rpx solid #999;
        color: #999;
        background-color: transparent;
        font-size: $xg-size-3;
        &:last-of-type {
          color: $xg-c-red;
          border-color: $xg-c-red;
          margin-left: 20rpx;
        }
      }
    }
  }
</style>
<template>
  <!--<wxs src="./wxs/mine.wxs" module="mineWxs"/>-->
  <!--<address-cell :address="addressInfo"-->
  <!--:isFromList="false"-->
  <!--@clickAddress="onClickAddress"></address-cell>-->
  <view class="address-item">
    <view class="center-part">
      <view class="first-line">
        <view class="name">{{addressInfo.name}}</view>
        <view class="mobile">{{addressInfo.mobile}}</view>
      </view>
      <view class="second-line address">{{addressInfo.provinceName + addressInfo.cityName + addressInfo.countyName +
        addressInfo.detailAddress}}
      </view>
    </view>
  </view>
  <view class="orderTrack" @tap="onClickTrack">
    点击查看物流信息
  </view>
  <view class="goods-info">
    <repeat for="{{orderInfo.orderExtRespList}}" item="i">
      <view @tap="onClickGoods({{i}})" class="content">
        <image src="{{i.goodsImg}}" alt="" mode="widthFix"/>
        <view class="goods-info">
          <text class="name">{{i.name}}</text>
          <view class="dim" wx:if="{{globalWxs.haveSaleValue(i.saleValue)}}">
            {{i.saleValue}}
          </view>
          <text class="price">￥{{globalWxs.formatFenPrice(i.nbPrice)}}</text>
        </view>
        <view class="count">
          <text class="num">x {{i.num}}</text>
          <view wx:if="{{customerList[index]}}"
                class="customer"
                @tap.stop="onClickCustomer({{i}})">申请售后</view>
        </view>
      </view>
    </repeat>
  </view>
  <view class="order-info-area">
    <view class="create-time">
      <text>下单时间：</text>
      {{orderInfo.order.createdTime}}
    </view>
    <view>
      <text>订单编号：</text>
      {{orderInfo.order.orderId}}
    </view>
  </view>
  <view class="pay-way-area">
    <view>
      <text>支付方式：</text>
      微信
    </view>
    <view>
      <text>商品合计：</text>
      ￥{{globalWxs.formatFenPrice(orderInfo.order.nbAmount)}}
    </view>
    <view>
      <text>运费：</text>
      ￥{{globalWxs.formatFenPrice(orderInfo.order.freightAmount)}}
    </view>
  </view>
  <view class="total-area">
    <view>
      <text>实付：</text>
      ￥{{globalWxs.formatFenPrice(payTotal)}}
    </view>
  </view>
  <view class="pay-info" wx:if="{{mineWxs.status2CN(orderInfo.order.status) === '未支付'}}">
    <view>
      <button @tap="onClickCancel">取消订单</button>
      <button @tap="onClickPay">直接付款</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux' // eslint-disable-line
  import globalWxs from '../../wxs/global.wxs'
  import mineWxs from '../../wxs/mine.wxs'
  import NetworkManagerOrder from '../../network/NetworkManagerOrder';
  import NetworkManagerPayment from '../../network/NetworkManagerPayment';
  import NetworkManagerCustomer from '../../network/NetworkManagerCustomer';

  @connect({
    userInfo (state) {
      return state.user.userInfo
    }
  })
  export default class OrderDetail extends wepy.page {
    config = {
      navigationBarTitleText: '订单详情'
    }

    components = {}

    wxs = {
        globalWxs,
        mineWxs
    }

    data = {
      orderInfo: {},
      addressInfo: {},
      payTotal: 0,
      orderExtRespList: [],
      customerList: []
    }

    computed = {
    }

    methods = {
      onClickTrack() {
//        跳转物流页面
        wepy.navigateTo({
          url: './order-track?orderId=' + this.orderInfo.order.orderId
        })
      },
      onClickCancel() {
        wepy.showNavigationBarLoading();
        NetworkManagerOrder.cancelOrder(this.orderInfo.order.orderId)
          .then(data => {
            wepy.hideNavigationBarLoading();
            wepy.navigateBack()
          }, err => {
            wepy.hideNavigationBarLoading();
            wepy.showToast({title: err.message, icon: 'none'})
          })
      },
      onClickPay() {
        wepy.showNavigationBarLoading();
        NetworkManagerPayment.applyPay(this.orderInfo.order.orderId, 'wxmini')
          .then(data => {
            wepy.hideNavigationBarLoading();
            wepy.requestPayment({
              'timeStamp': data.timeStamp,
              'nonceStr': data.nonceStr,
              'package': data.packages,
              'paySign': data.paySign,
              'signType': 'MD5',
//            'signType': data.signType,
              'success': (res) => {
                console.log(res);
                wepy.switchTab({
                  url: '../mine/mine'
                })
              },
              'fail': (res) => {
                console.log(res);
              }
            })
          }, err => {
            wepy.hideNavigationBarLoading();
            wepy.showToast({title: err.message, icon: 'none'})
          })
      },
      onClickCustomer(goods) {
          wepy.navigateTo({
          url: `./customer?order=${JSON.stringify(this.orderInfo.order)}&address=${JSON.stringify(this.orderInfo.address)}&goods=${JSON.stringify(goods)}`
          });
      }
    }

    onLoad(option) {
      this.orderInfo = JSON.parse(option.order);
      this.orderExtRespList = this.orderInfo.orderExtRespList;
      this.addressInfo = this.orderInfo.address;
      this.payTotal = this.orderInfo.order.freightAmount + this.orderInfo.order.nbAmount;
      this.fetchIsCustomer();
      this.$apply();
    }

    fetchIsCustomer() {
//        查看是否可退货
      wepy.showNavigationBarLoading();
      this.orderExtRespList.forEach((item, index) => {
        NetworkManagerCustomer.fetchExpectComp(this.orderInfo.order.orderId, this.orderInfo.order.wzOrderId, item.skuId).then(data => {
          wepy.hideNavigationBarLoading();
          this.customerList[index] = data;
          this.$apply();
        }, err => {
          this.customerList[index] = false;
          this.$apply();
          wepy.hideNavigationBarLoading();
          wepy.showToast({title: err.message, icon: 'none'})
        })
      })
    }
  }
</script>
